# Data for the success stories

# The background image for each category is a .jpg file in
# /assets/img/success/header/ with the same name as the tag.

categories:
  - name: Aerospace
    tag: aero
  - name: CAD
    tag: cad
  - name: Music
    tag: music
  - name: Mathematics
    tag: math
  - name: Science
    tag: science
  - name: Data Analysis
    tag: data
  - name: AI & Machine Learning
    tag: ai
  - name: Graphics
    tag: graphics

stories:
  aero:
    - title: Piano
      description: |
        Piano is a complete aircraft analysis suite from [Lissys Ltd][site].

        >Piano is a powerful commercial tool with an established user base of major
        >airframe and aero-engine manufacturers, research and governmental institutions,
        >and environmental organisations worldwide. Originally written in Macintosh
        >Common Lisp, Piano has recently been ported to LispWorks and the user interface
        >is now implemented using LispWorks CAPI graphical toolkit. The cross-platform
        >capability of LispWorks proved to be an invaluable strength. The highly
        >professional LispWorks team impressed Lissys from the start by rapidly
        >prototyping some examples demonstrating the feasibility of such a complex
        >transfer. The actual port was then carried out through Clozure Associates in a
        >timeframe significantly better than our early expectations and resulting in a
        >very stable final product.
        >
        >Since the inception of Piano in the early 1990s, Lissys has used Lisp to
        >support rapid development. The malleability of the language was a key factor
        >when integrating the multifaceted and interdisciplinary aspects of aircraft
        >project analysis.
        >
        >The flexibility of LispWorks also allowed us to create two separate tools, one
        >that is fully-featured and largely intended for aeronautical engineers
        >(Piano-5), and one that is freely downloadable and is addressed to a broader
        >audience of anyone interested in aircraft evaluation with an emphasis on
        >environmental emissions (Piano-X). A critical requirement for Piano-X was to
        >provide a clean and simple interface on top of some highly complex underlying
        >methods, a task that both LispWorks and Clozure handled admirably.
        >
        >In our experience, the straightforward licensing approach and technical
        >professionalism of LispWorks stand out in the complex landscape of software
        >development and create a highly effective combination.
        >
        ><div class="source"><a href="http://www.lispworks.com/success-stories/piano.html">LispWorks</a></div>

        [site]: http://www.piano.aero/
      gallery:
        count: 4
        directory: piano
        type: png

    - title: Missile Defense at Raytheon
      description: |
        Raytheon has built SigLab, a Common Lisp platform for signal processing
        used in missile defense.

        It combines high-performance FFTs and composable signal processing components.

        >By leveraging decades of experience across several kill vehicle
        >programs and vast tactical weapon expertise across every domain and
        >mission area, we’re meeting the critical needs of today and planning
        >for the threats of tomorrow.

        >Raytheon is the only company working simultaneously on four kill
        >vehicles, providing a pipeline of crucial lessons learned and
        >laboratories and factories teeming with experts whose knowledge is
        >irreplaceable. Pioneering the nation’s early kinetic warhead
        >development provided Raytheon the expertise to evolve the way kill
        >vehicles are produced, tested, deployed, and ultimately how they
        >perform to defend the United States and its allies. The company is
        >building upon this legacy of expertise to revolutionize the role that
        >kill vehicles play in missile defense.

      overlay:
        image: /assets/img/success/aero/raytheon/kv.jpg
        content: |
          >The screenshot shows our SigLab system running a simulation of an
          >incoming nuclear warhead (all exo-atmospheric), and at 40 seconds
          >into the run you see in the middle left 2-D Sonogram display the
          >effects of a nearby warhead exploding and heating up the target being
          >tracked. This analysis was used at Raytheon to develop advanced rapid
          >detection and discrimination systems for targeting incoming nuclear
          >warheads on our [EKV project][ekv] (Exoatmospheric Kill Vehicle).
          >
          ><div class="source">David McClain, Raytheon</div>

          [ekv]: http://www.raytheon.com/capabilities/products/ekv/

    # - title: An NFS server for the 747
    #   description: |
    #     [Franz][franz] wrote an [NFS][nfs] server, used in Boeing 747 and 777
    #     aircraft.

    #     [franz]: http://franz.com/
    #     [nfs]: https://en.wikipedia.org/wiki/Network_File_System

    # - title: iCAD Model of the 747
    #   description: |
    #     Boeing uses iCAD to implement a parametric, spreadsheet-like CAD model of the 747.

  cad:
    - title: ICAD
      description: |
        [ICAD][wiki] is a knowledge-based CAD system.

        >Knowledge Technologies International (KTI) is the world's leading
        >provider of object-oriented engineering software solutions for the
        >aerospace, automotive, industrial equipment, and construction
        >industries. KTI chose the Allegro CL development environment for its
        >highly successful ICAD System, used by such prominent customers as
        >General Motors, Ford, Jaguar, Mitsubishi, and Honda.
        >
        >"The problems we solve," explains KTI's Vice President of Development
        >Bob Phillips, "demand that we have a development tool that is
        >scaleable, industrial-strength, and robust. Allegro CL has worked very
        >well for us."
        >
        >"Previously we could analyze only two nose shapes on a new aircraft
        >project because each one took 5 weeks," explains Steve Allwright of
        >British Aerospace. "Using ICAD we are now able to evaluate upwards of
        >sixty-five shapes, because each one takes only 10 minutes."
        >
        ><div class="source"><a href="http://franz.com/success/customer_apps/knowledge_mgmt/kti.lhtml">Franz</a></div>

        [wiki]: https://en.wikipedia.org/wiki/ICAD_(software)

    - title: Softscan
      description: |
        >Fractal Concept offers a wide range of software and electronic
        >products, from non-destructive testing ultrasonic devices to Internet
        >applications. Founded in 1999, the company now works for several
        >European bluechip companies. It helps clients gain competitive edge by
        >employing only the most powerful and reliable software technologies.

        >LispWorks has been used by Fractal Concept to develop SoftScan,
        >software that drives automated, non-destructive testing applications -
        >'completely written in Lisp, hence its reliability and robustness'.
        >
        ><div class="source"><a href="http://www.lispworks.com/success-stories/fractalconcept-softscan.html">LispWorks</a></div>

    - title: PlantWise
      description: |
        >Bentley is the industry leader in providing comprehensive software solutions
        >for the infrastructure lifecycle. Bentley has proven applications that help
        >engineers, architects, contractors, governments, institutions, utilities and
        >owner-operators design, build and operate more productively, collaborate more
        >globally and deliver infrastructure assets that perform more sustainably.
        >
        >With nearly 3000 colleagues in more than 45 countries and annual revenues of
        >$500 million, Bentley Systems has invested more than $1 billion in research,
        >development and acquisitions since 1999. Nearly 90 percent of the Engineering
        >News-Record Top 500 Design firms are Bentley subscribers and Daratech has
        >ranked Bentley as the world's No. 2 provider of software solutions to the
        >architecture, engineering, construction and owner-operator market as well as
        >No. 2 in the GIS/geospatial market.
        >
        >Bentley uses Allegro CL's Dynamic Objects technology in its PlantWise product,
        >a conceptual plant design software system built on top of Design++, developed
        >by Design Power.
        >
        ><div class="source"><a href="http://franz.com/success/customer_apps/knowledge_mgmt/plantwise.lhtml">Franz</a></div>

        Take a look at the [data sheet][ds] for more information.

        [ds]: http://ftp2.bentley.com/dist/collateral/docs/bentley_plantwise/bentley-plantwise_product-data-sheet.pdf

      gallery:
        count: 3
        directory: plantwise
        type: png

  music:
    - title: OpusModus
      description: |

        [OpusModus][om] is a Common Lisp-based music composition package.

        >Opusmodus is aimed at composers of art music, concert music, choral
        >music, film music, jazz, electro-acoustic music, music for games, new
        >media, songwriters, teaching and studying. Opusmodus is the true
        >composer’s software environment, providing a comprehensiveness not seen
        >in any other system available today.

        [om]: http://opusmodus.com/

      gallery:
        count: 8
        directory: opusmodus
        type: jpg

  math:
    - title: Maxima
      description: |

        [Maxima][wiki] is a [computer algebra system][cas] descended from the
        [Macsyma][mac] project. It's built in Common Lisp, runs an all major
        operator systems, and supports both symbolic and numerical computation.

        Maxima also allows expensive numerical code to be compiled to Fortran to
        speed up execution.

        [wiki]: https://en.wikipedia.org/wiki/Maxima_(software)
        [cas]: https://en.wikipedia.org/wiki/Computer_algebra_system
        [mac]: https://en.wikipedia.org/wiki/Macsyma

      gallery:
        count: 3
        directory: maxima
        type: png

    - title: ACL2
      description: |

        [ACL2][wiki] is a [theorem prover][prover].

        [wiki]: https://en.wikipedia.org/wiki/ACL2
        [prover]: https://en.wikipedia.org/wiki/Automated_theorem_proving

      tabs:
        - id: amd
          tab: >
            <img alt="AMD" title="AMD" src="/assets/img/success/math/amd.png">
          content: |
            AMD used ACL2 to formally verify the correctness of AMD Athlon's
            IEEE 754 floating-point support.
        - id: motorola
          tab: >
            <img alt="Motorola" title="Motorola" src="/assets/img/success/math/motorola.png">
          content: |
            ACL2 was used by Motorola Government Systems to certify microcode
            programs for the Motorola CAD signal processor. The model could be
            used to predict every bit of memory at every cycle.


  science:
    - title: Pathway Tools at SRI
      description: |

        >Pathway Tools provides a powerful and comprehensive set of features for
        >querying, visualization, analysis, and curation of the BioCyc database
        >collection. Pathway Tools combines representation and inference
        >techniques from artificial intelligence to extract additional
        >information from genomes, and encode that information within a
        >sophisticated ontology. Pathway Tools can operate on the BioCyc
        >collection of PGDBs available through SRI, and on locally created
        >PGDBs, such as for proprietary genomes. It can also operate on more
        >than 1,700 PGDBs created by third parties, including those listed in
        >SRI's Registry of Pathway/Genome Databases at
        >http://biocyc.org/registry.html.
        >
        >To date, SRI has licensed Pathway Tools to more than 3,000 academic and industrial groups.
        >
        ><div class="source"><a href="http://franz.com/success/customer_apps/bioinformatics/SRI_Pathway-tools.lhtml">Franz</a></div>

      gallery:
        count: 6
        directory: pathway
        type: jpg

    - title: BioBike
      description: |

        [BioBike][paper] is a web-based, fully programmable research environment
        and biological knowledge base.

        >BioBike system is a biology-specific programming language embedded in
        >an integrated biological knowledge-base, all accessible through the
        >web. In the best case, biologists themselves would be able to log into
        >the system and write their own programs to ask novel biological
        >questions without the help of (or with very little help from) software
        >engineers.
        >
        >First published in 2002, BioBike is Common Lisp from top to bottom. The
        >team chose Lisp because it is the most natural language in which to
        >write complex symbolic reasoning programs. Common Lisp features such as
        >macros are critical when extending the syntax to create the BioBike
        >language.
        >
        ><div class="source"><a href="http://www.lispworks.com/success-stories/biobike.html">LispWorks</a></div>

        [paper]: http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2703918/

    - title: StructureLab
      description: |

        >StructureLab is a computational system which has been developed to
        >permit the use of a broad array of approaches to the analysis of the
        >structure of RNA. The goal of the development is to provide a large set
        >of tools that can be well integrated with experimental biology to aid
        >in the process of the determination of the underlying structure of RNA
        >sequences.

        >The approach taken views the structure determination problem as one of
        >dealing with a data base of many computationally generated structures
        >and provides the capability to analyze this data set from different
        >perspectives. Many algorithms are integrated into one system which also
        >utilizes a heterogeneous computing approach permitting the use of
        >several computer architectures to help solve the posed problems. These
        >different computational platforms make it relatively easy to
        >incorporate currently existing programs as well as newly developed
        >algorithms and to match these algorithms to the appropriate hardware.
        >
        ><div class="source"><a href="http://franz.com/success/customer_apps/bioinformatics/structure_lab.lhtml">Franz</a></div>

    - title: CAGED and BEST
      description: |

        >Marco Ramoni and his team at Harvard and Boston Children's Hospital
        >used LispWorks to develop both [CAGED][caged] and [BEST][best].
        >
        >CAGED (Cluster Analysis of Gene Expression Dynamics) is a program for
        >the analysis of temporal profiles of gene expression data. CAGED is
        >distributed free of charge to academic and non-profit
        >organisations. BEST (Best Enumeration of SNP Tags) is a program
        >designed to identify the minimum set of SNPs tagging an haplotype
        >block.
        >
        ><div class="source"><a href="http://www.lispworks.com/success-stories/hms-caged-best.html">LispWorks</a></div>


        [caged]: https://web.archive.org/web/20050421075601/http://www.genomethods.org/caged/
        [best]: https://web.archive.org/web/20050207140130/http://genomethods.org/best/

  data:
    - title: pgloader
      description: |
        [pgloader][pg] is a bulk importer for PostgreSQL. It can import data from MySQL,
        SQLite or dBase databases and CSV files, automatically identify schemas, and
        does everything asynchronously.

        Migrate from MySQL to PostgreSQL. In one command.
        : Given a MySQL connection string, pgloader query the catalogs to list your
          tables, constraints and indexes and know how to transform this schema into a
          PostgreSQL equivalent, applying advanced casting rules that you can edit in
          the command.

        Load any CSV file. Real quick.
        : The current version of pgloader is up to ten times faster than the previous
          one. The new command syntax is really powerful, and as it's different enough
          from the previous version, pgloader includes a command line switch to upgrade
          your setup for you.

        Transform your data. While streaming.
        : pgloader includes reformating modules allowing you to reformat your data, such
          as transforming a couple of integer columns into a single ip address, or a
          couple of floats into a single point. Of course, you can add any
          transformation you like and easily get to use it with pgloader loading your
          code!

        [pg]: http://pgloader.io/
      video:
        sources:
          - url: http://medias.ircam.fr/stream/ext/video/files/2014/05/13/ELSAA_6_mai2.mov.webm#t=57,357
            type: video/webm
          - url: http://medias.ircam.fr/stream/ext/video/files/2014/05/13/ELSAA_6_mai2.mov.mp4#t=57,357
            type: video/mp4
          - url: http://medias.ircam.fr/stream/ext/video/files/2014/05/13/ELSAA_6_mai2.mov.ogg#t=57,357
            type: video/ogg

    - title: Somewrite
      description: |

        [Somewrite][web] is a Japanese [owned media][media] startup focusing on
        advertising delivery and ad recommendations. They use Common Lisp to
        power their ad delivery system.

        [web]: http://somewrite.jp/
        [media]: https://www.titan-seo.com/newsarticles/trifecta.html

  ai:
    - title: DART
      description: |
        DART, the [Dynamic Analysis and Replanning Tool][wiki], is a logistics
        expert system used by the US military and written in Common Lisp.

        In four years, DART saved enough money in the Gulf War to pay for the
        previous 30 years of DARPA-funded AI research.

        [wiki]: https://en.wikipedia.org/wiki/Dynamic_Analysis_and_Replanning_Tool

    - title: Grammarly
      description: |
        [Grammarly][site] is a grammar checking startup, but it's far more than
        a simple spell checker. It's grammar engine, written in Common Lisp,
        finds instances of incorrect tenses and suggests more precise synonyms
        for common words.

        >At Grammarly, the foundation of our business, our core grammar engine,
        >is written in Common Lisp. It currently processes more than a thousand
        >sentences per second, is horizontally scalable, and has reliably served
        >in production for almost 3 years.
        >
        ><div class="source"><a href="https://www.grammarly.com/blog/engineering/running-lisp-in-production/">Vsevolod Dyomkin</a></div>

        [site]: https://www.grammarly.com/

    - title: Routific
      description: |

        [Routific][site] is a route optimization and fleet management
        startup. Their routing engine, written in Common Lisp, plans optimal
        routes for delivery trucks, minimizing time and spent fuel.

        [site]: https://routific.com/

    - title: Cyc
      description: |

        The [Cyc][wiki] project aims to build a database of heuristics -- everyday knowledge.

        [wiki]: https://en.wikipedia.org/wiki/Cyc

    - title: Boeing Simplified English Checker
      description: |

        The [Boeing Simplified English Checker][boeing] is an expert system to
        aid aerospace technical writers.

        >ASD Simplified Technical English (formerly AECMA Simplified English) is
        >a writing standard for aerospace maintenance documentation. The
        >standard is defined in Specification ASD-STE100. This type of writing
        >standard is also known as a controlled language because it restricts
        >grammar, style and vocabulary to a subset of the English language.  -
        >
        >The objective of Simplified Technical English is clear, unambiguous
        >writing. Developed primarily for non-native English speakers, it is
        >also known to improve the readability of maintenance text for native
        >speakers. ASD Simplified Technical English does not attempt to define
        >English grammar or prescribe correct English. It does attempt to limit
        >the range of English, and many of its rules are recommendations found
        >in technical writing textbooks.
        >
        ><div class="source"><a href="http://franz.com/success/customer_apps/natural_language/boeing.lhtml">Franz</a></div>

        [boeing]: http://www.boeing.com/company/key-orgs/licensing/simplified-english-checker.page


  graphics:
    - title: Mirai
      description: |

        [Mirai][wiki] is a 3D editor built on the winged-edge data structure. It
        was used, among other things, to model the face of Gollum in the *Lord
        of the Rings* trilogy.

        [wiki]: https://en.wikipedia.org/wiki/Mirai_(software)

    - title: NaughtyDog
      description: |

        [Naughty Dog Software][wiki] used a Common Lisp DSL to write the [Jak
        and Dexter][series] series of games for the Play Station.

        >Naughty Dog co-founder Andy Gavin, says the unique capabilities of Lisp
        >enabled fast development and execution of character and object control
        >– something that was needed to fully realize the numerous 3D creatures
        >and devices which interact with the player in real-time (60 frames per
        >second).
        >
        >"Lisp was just the best solution for this job," comments Gavin. "With
        >leading edge game systems like ours, you have to deal with complicated
        >behaviors and real-time action. Languages like C are very poor with
        >temporal constructs. C is just very awkward for a project like
        >this. Lisp, on the other hand, is ideal."
        >
        >As Gavin explains, "With Lisp, one can rapidly develop meta constructs
        >for behaviors and combine them in new ways. In addition, Lisp allows
        >the redefinition of the language to easily add new constructs;
        >particularly those needed to deal with time-based behaviors and
        >layering of actions. Contrary to popular belief, there is nothing
        >inherently slow about Lisp. It is easy to construct a simple dialect
        >which is just as efficient as C, but retains the dynamic and consistent
        >qualities that make Lisp a much more effective expression of one’s
        >programming intentions."
        >
        ><div class="source"><a href="http://franz.com/success/customer_apps/animation_graphics/naughtydog.lhtml">Franz</a></div>

        [wiki]: https://en.wikipedia.org/wiki/Naughty_Dog)
        [series]: https://en.wikipedia.org/wiki/Jak_and_Daxter
